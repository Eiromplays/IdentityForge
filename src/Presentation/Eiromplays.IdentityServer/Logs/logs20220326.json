{"Timestamp":"2022-03-26T02:06:09.4479364+01:00","Level":"Error","MessageTemplate":"Failed executing DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"20","parameters":"@__p_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT t.\"Id\", t.\"AdminEmail\", t.\"ConnectionString\", t.\"Identifier\", t.\"IsActive\", t.\"Issuer\", t.\"Name\", t.\"ValidUpto\"\nFROM \"MultiTenancy\".\"Tenants\" AS t\nWHERE t.\"Id\" = @__p_0\nLIMIT 1","EventId":{"Id":20102,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandError"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:06:09.5319458+01:00","Level":"Error","MessageTemplate":"An exception occurred while iterating over the results of a query for context type '{contextType}'.{newline}{error}","Exception":"Npgsql.PostgresException (0x80004005): 42P01: relation \"MultiTenancy.Tenants\" does not exist\n\nPOSITION: 125\n   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"MultiTenancy.Tenants\" does not exist\n    Position: 125\n    File: parse_relation.c\n    Line: 1360\n    Routine: parserOpenTable","Properties":{"contextType":"Eiromplays.IdentityServer.Infrastructure.Multitenancy.TenantDbContext","newline":"\n","error":"Npgsql.PostgresException (0x80004005): 42P01: relation \"MultiTenancy.Tenants\" does not exist\n\nPOSITION: 125\n   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"MultiTenancy.Tenants\" does not exist\n    Position: 125\n    File: parse_relation.c\n    Line: 1360\n    Routine: parserOpenTable","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:06:09.5491855+01:00","Level":"Fatal","MessageTemplate":"Unhandled exception","Exception":"Npgsql.PostgresException (0x80004005): 42P01: relation \"MultiTenancy.Tenants\" does not exist\n\nPOSITION: 125\n   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\n   at Eiromplays.IdentityServer.Infrastructure.Persistence.Initialization.DatabaseInitializer.SeedRootTenantAsync(CancellationToken cancellationToken) in /home/eirik/GitHub/IdentityServer.Admin/src/Infrastructure/Eiromplays.IdentityServer.Infrastructure/Persistence/Initialization/DatabaseInitializer.cs:line 70\n   at Eiromplays.IdentityServer.Infrastructure.Persistence.Initialization.DatabaseInitializer.InitializeTenantDbAsync(CancellationToken cancellationToken) in /home/eirik/GitHub/IdentityServer.Admin/src/Infrastructure/Eiromplays.IdentityServer.Infrastructure/Persistence/Initialization/DatabaseInitializer.cs:line 65\n   at Eiromplays.IdentityServer.Infrastructure.Persistence.Initialization.DatabaseInitializer.InitializeDatabasesAsync(CancellationToken cancellationToken) in /home/eirik/GitHub/IdentityServer.Admin/src/Infrastructure/Eiromplays.IdentityServer.Infrastructure/Persistence/Initialization/DatabaseInitializer.cs:line 29\n   at Eiromplays.IdentityServer.Infrastructure.Startup.InitializeDatabasesAsync(IServiceProvider services, CancellationToken cancellationToken) in /home/eirik/GitHub/IdentityServer.Admin/src/Infrastructure/Eiromplays.IdentityServer.Infrastructure/Startup.cs:line 64\n   at Program.<Main>$(String[] args) in /home/eirik/GitHub/IdentityServer.Admin/src/Presentation/Eiromplays.IdentityServer/Program.cs:line 26\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"MultiTenancy.Tenants\" does not exist\n    Position: 125\n    File: parse_relation.c\n    Line: 1360\n    Routine: parserOpenTable","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:06:09.5651207+01:00","Level":"Information","MessageTemplate":"Server Shutting down...","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:06:52.0728977+01:00","Level":"Information","MessageTemplate":"Server Shutting down...","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:07:11.2828452+01:00","Level":"Information","MessageTemplate":"Server Shutting down...","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:07:29.7591815+01:00","Level":"Information","MessageTemplate":"Server Shutting down...","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:07:35.2694886+01:00","Level":"Information","MessageTemplate":"Server Shutting down...","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:07:40.7281646+01:00","Level":"Information","MessageTemplate":"Server Shutting down...","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:07:46.6157599+01:00","Level":"Information","MessageTemplate":"Server Shutting down...","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:08:56.8709648+01:00","Level":"Information","MessageTemplate":"Server Shutting down...","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:10:54.8428469+01:00","Level":"Information","MessageTemplate":"Server Shutting down...","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:12:11.9500161+01:00","Level":"Information","MessageTemplate":"Server Shutting down...","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:13:40.0765667+01:00","Level":"Error","MessageTemplate":"Failed executing DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"13","parameters":"@__p_0='?'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT t.\"Id\", t.\"AdminEmail\", t.\"ConnectionString\", t.\"Identifier\", t.\"IsActive\", t.\"Issuer\", t.\"Name\", t.\"ValidUpto\"\nFROM \"MultiTenancy\".\"Tenants\" AS t\nWHERE t.\"Id\" = @__p_0\nLIMIT 1","EventId":{"Id":20102,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandError"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:13:40.1502208+01:00","Level":"Error","MessageTemplate":"An exception occurred while iterating over the results of a query for context type '{contextType}'.{newline}{error}","Exception":"Npgsql.PostgresException (0x80004005): 42P01: relation \"MultiTenancy.Tenants\" does not exist\n\nPOSITION: 125\n   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"MultiTenancy.Tenants\" does not exist\n    Position: 125\n    File: parse_relation.c\n    Line: 1360\n    Routine: parserOpenTable","Properties":{"contextType":"Eiromplays.IdentityServer.Infrastructure.Multitenancy.TenantDbContext","newline":"\n","error":"Npgsql.PostgresException (0x80004005): 42P01: relation \"MultiTenancy.Tenants\" does not exist\n\nPOSITION: 125\n   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"MultiTenancy.Tenants\" does not exist\n    Position: 125\n    File: parse_relation.c\n    Line: 1360\n    Routine: parserOpenTable","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:13:40.3819823+01:00","Level":"Fatal","MessageTemplate":"Unhandled exception","Exception":"Npgsql.PostgresException (0x80004005): 42P01: relation \"MultiTenancy.Tenants\" does not exist\n\nPOSITION: 125\n   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\n   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\n   at Eiromplays.IdentityServer.Infrastructure.Persistence.Initialization.DatabaseInitializer.SeedRootTenantAsync(CancellationToken cancellationToken) in /home/eirik/GitHub/IdentityServer.Admin/src/Infrastructure/Eiromplays.IdentityServer.Infrastructure/Persistence/Initialization/DatabaseInitializer.cs:line 70\n   at Eiromplays.IdentityServer.Infrastructure.Persistence.Initialization.DatabaseInitializer.InitializeTenantDbAsync(CancellationToken cancellationToken) in /home/eirik/GitHub/IdentityServer.Admin/src/Infrastructure/Eiromplays.IdentityServer.Infrastructure/Persistence/Initialization/DatabaseInitializer.cs:line 65\n   at Eiromplays.IdentityServer.Infrastructure.Persistence.Initialization.DatabaseInitializer.InitializeDatabasesAsync(CancellationToken cancellationToken) in /home/eirik/GitHub/IdentityServer.Admin/src/Infrastructure/Eiromplays.IdentityServer.Infrastructure/Persistence/Initialization/DatabaseInitializer.cs:line 29\n   at Eiromplays.IdentityServer.Infrastructure.Startup.InitializeDatabasesAsync(IServiceProvider services, CancellationToken cancellationToken) in /home/eirik/GitHub/IdentityServer.Admin/src/Infrastructure/Eiromplays.IdentityServer.Infrastructure/Startup.cs:line 64\n   at Program.<Main>$(String[] args) in /home/eirik/GitHub/IdentityServer.Admin/src/Presentation/Eiromplays.IdentityServer/Program.cs:line 26\n  Exception data:\n    Severity: ERROR\n    SqlState: 42P01\n    MessageText: relation \"MultiTenancy.Tenants\" does not exist\n    Position: 125\n    File: parse_relation.c\n    Line: 1360\n    Routine: parserOpenTable","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:13:40.4690135+01:00","Level":"Information","MessageTemplate":"Server Shutting down...","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:14:15.5216461+01:00","Level":"Information","MessageTemplate":"Server Shutting down...","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:14:57.3342251+01:00","Level":"Information","MessageTemplate":"Server Shutting down...","Properties":{"Application":"FSH.WebApi"}}
{"Timestamp":"2022-03-26T02:15:45.0269532+01:00","Level":"Information","MessageTemplate":"Server Shutting down...","Properties":{"Application":"FSH.WebApi"}}
